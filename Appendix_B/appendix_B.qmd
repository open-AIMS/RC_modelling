---
title: "Appendix B"
subtitle: "CASE‐STUDY 2: SIMULATION SCENARIOS"
authors:
  - name: Julie Vercelloni
    corresponding: true
    email: j.vercelloni@aims.gov.au
    affiliations:
      - ref: aims
      - ref: qut
  - name: Murray Logan
    affiliations:
      - ref: aims
  - name: Andrew Zammit‐Mangion
    affiliations:
      - ref: UOW
      - ref: KAUST
  - name: Matthew Sainsbury‐Dale
    affiliations:
      - ref: UOW
      - ref: KAUST
  - name: Kerrie Mengersen
    affiliations:
      - ref: qut
  - name: Manuel González‐Rivero
    affiliations:
      - ref: aims
affiliations:
  - id: aims
    name: Australian Institute of Marine Science, Townsville, Australia
  - id: qut
    name: Centre for Data Science, Queensland University of Technology, Brisbane, Australia
  - id: UOW
    name: School of Mathematics and Applied Statistics, University of Wollongong, Wollongong, Australia
  - id: KAUST
    name: King Abdullah University of Science and Technology, Thuwal, Saudi Arabia
engine: knitr
format:
  html:
    toc: true
    toc-location: left
    title-block-banner: true
    toc-depth: 3
    highlight-style: atom-one
    embed-resources: true
    theme:
      light: flatly
      dark: darkly
    code-overflow: wrap
    code-fold: false
    number-sections: true
    number-depth: 2
    shift-heading-level-by: -1
    crossref:
      lst-title: Code listing
    fig-align: center
    text-align: center
    acm-html: default
css: styles.css
editor:
  markdown:
    wrap: 72
---

```{r setup, chunkOpts, echo = FALSE}
knitr::opts_chunk$set(cache = FALSE, message = FALSE, warning = FALSE)
```
::: {.callout-important}
To be displayed on a big screen. 
:::

```{r}
#| include: false
#| echo: false
#| eval: false


rm(list=ls())
setwd(paste0(here::here(), "/Appendix_B"))

# Loading packages and functions
source("R/packages.R")
source("R/functions.R")

############ Generate the scenarios 

 ######## Simulation 1 ########
title_of_run <- "High-resolution"
##### Create folders
make_folders(title_of_run)
##### Generate settings
generateSettings(nreefs = 25, nyears = 20)
sparse = FALSE # if different temporal sampling intensities is desired, otherwise annual surveys. 
##### Run the pipeline
source("scripts/run_pipeline.R")

 ######## Simulation 2 ########
title_of_run <- "Medium-resolution"
##### Create folders
make_folders(title_of_run)
##### Generate settings
generateSettings(nreefs = 15, nyears = 10)
sparse = FALSE 
##### Run the pipeline
source("scripts/run_pipeline.R")

 ######## Simulation 3 ########
title_of_run <- "Low-resolution"
##### Create folders
make_folders(title_of_run)
##### Generate settings
generateSettings(nreefs = 5, nyears = 5)
sparse = FALSE 
##### Run the pipeline
source("scripts/run_pipeline.R")

 ######## Simulation 4 ########
title_of_run <- "Temporally-sparse"
##### Create folders
make_folders(title_of_run)
##### Generate settings
generateSettings(nreefs = 49, nyears = 30)
sparse = TRUE 
##### Run the pipeline
source("scripts/run_pipeline.R")

############ Generate predictive performances across all simulations 
source("scripts/model_perf_allsim.R")
```

```{r}
#| include: true
#| echo: false
#| eval: true
#| cache: false

source("R/packages.R")
source("R/functions.R")

# Grep names and locations of simulations in the home folder
all_dirs <- list.dirs(full.names = FALSE, recursive = FALSE)
exclude_patterns <- c("R", "scripts", "resources", ".git")
included_dirs <- all_dirs[!sapply(all_dirs, function(dir) any(grepl(paste(exclude_patterns, collapse = "|"), dir)))] 
included_dirs <- included_dirs[!grepl("^\\d", included_dirs)]

# Grep the models that ran for each simulations 
file <- list.files(str_glue("{included_dirs}/model_outputs/full_run"),
    full.names = TRUE
  )

# Extract second term and last term without .Rdata
table_data <- data.frame(
  simulation = map_chr(str_split(file, "/"), 1),               
  model = str_remove(str_remove(file, "^.*/"), "\\.Rdata$")) %>%
  dplyr::group_by(simulation) %>%
  dplyr::summarize(
    number_of_models = n(),                            
    model_name = toString(unique(model))  
  )

# Assign figure path
assign("FIGURES_PATH", "/report/extra/", envir = .GlobalEnv)
```

### Introduction to synthos

The R package synthos [GitHub](https://github.com/open-AIMS/synthos) generates synthetic data with the primarly aim to test new methods and sampling designs, in a controlled enviroment. The data are created from spatio-temporal dependency structures mimicing realistic baselines, population dynamics, disturbance regimes and stochastic processes. 

The generation of synthetic data is based on four main steps: 

* Generation of the spatio-temporal domains: the first step consists to generate virtual coral reefs across a spatial domain.
* Generation of the disturbances: three disturbance types are generated (Heat Stress events, Cyclones and "Other") using a mechanistic approach that generates different spatial and temporal footprints across the spatial domain.
* Generation of baselines: representing values in coral cover the year prior the first sampling. 
* Generation of sampling designs: the user selects the number of monitoring locations and surveyed years and additional spatial scales.   

Coral cover values are generated by combining baseline values, disturbance effects, and growth rates, and then projecting their cumulative effects across the spatial domain. The sampling design specifies the number of observations and years to be selected within a domain, creating the observed dataset. Models are then fitted to these observed data, and their predictive performance is evaluated at locations that are not monitored but for which true values are known. 

### Synthos modelling pipeline 

We developed a modelling pipeline to test the predictive capaiblities of the spatio-temporal FRK model under different sampling designs. Four scenarios are explored with varying number of monitored reefs and years (@tbl-scenario). 


```{r}
#| include: true
#| echo: false
#| eval: true
#| cache: true

table_data <- data.frame(
  simulation = c("High-resolution", "Medium-resolution", "Low-resolution", "Temporally_sparse"),               
  reef_number = c("25", "15", "5", "50"),
  year_number = c("20", "10", "5", "5-30")) 
```

```{r}
#| label: tbl-scenario
#| eval: true
#| echo: false
#| tbl-cap: Details of the simulation scenarios. 
knitr::kable(table_data)
```

Other settings were kept constant across the simulation scenarios. The coral baseline was generated using a west–east gradient of coral cover, consistent with patterns observed on the Great Barrier Reef. The relative influence of disturbances on coral dynamics was set to 60% for heat stress events, 39% for cyclones, and 1% for other factors. Coral growth was fixed at 30%, with a possible coverage range from 1% to 70%. The sampling design emulates the monitoring program of the Australian Institute of Marine Science, where data are collected within each reef from 2 sites, 5 transects per site, 100 photo frames per transect. Finally, point-based observations are generated to mimic the outputs of the machine learning system used in the ReefCloud platform (https://reefcloud.github.io/resources/ReefCloud_Overview.html), with 50 points per frame automatically classified.

The spatial domain is divided into a 0.1° tessellation grid, from which tier-level disturbance values are extracted and coral cover values are averaged for use in the spatio-temporal model. The predictive performances of the spatio-temporal for each scenario is tested using four predictive measures (see details below). These metrics are calculated using model predictions at predictive-tiers where true values are known.   

Additional results of synthetic data vizualisation, predictions across multiple spatial scales, uncertainty, model goodness-of-fit, and disturbances are presented below.    

### Monitoring locations 

```{r, fig.width=10, fig.height=10}
#| results: asis
#| panel: tabset

fig_synthos <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "synthos_reef_10K", 
    subtitle = TRUE, 
    plot_labels = TRUE, 
    label = "Regional distribution of the synthetic reefs, where red dots indicate monitoring locations and hexagons represent tier boundaries. A tier is considered a data-tier if it contains a red dot; otherwise, it is classified as a new-tier for the scenario",
    n_cols = 1
  )
)
```

### Data visualization

```{r, fig.width=15, fig.height=15}
#| results: asis
#| panel: tabset

fig_synthos <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "trend_data_fixed", 
    subtitle = TRUE, 
    plot_labels = TRUE, 
    label = "Generated coral cover (%) values by transect within each reef, with colours representing different sites for the scenario",
    n_cols = 1
  )
)
```

```{r, fig.width=15, fig.height=15}
#| results: asis
#| panel: tabset

fig_synthos <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "tile_data_fixed", 
    subtitle = TRUE, 
    plot_labels = TRUE, 
    label = "Temporal patterns of mean coral cover (%) by site within reef. White gaps show years when reefs were not monitored as part of the scenario",
    n_cols = 1
  )
)
```

### Regional trends 

```{r, fig.width=15, fig.height=15}
#| results: asis
#| panel: tabset
 
fig_region <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "pred_broad", 
    subtitle = FALSE, 
    plot_labels = TRUE, 
    label = "Regional trend. The black line shows mean values and green shadows 95% credible intervals. The dotted blue line is the true simulated temporal field estimated from the Gaussian Random Markov Field values in the simulation",
    n_cols = 1
  )
)
```

### Model prediction

```{r, fig.width=15, fig.height=15}
#| results: asis
#| panel: tabset

fig_pred <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "pred[A-Za-z0-9]+", 
    subtitle = FALSE, 
    plot_labels = TRUE, 
    label = "Predictions of coral cover (%) in",
    n_cols = 1
  )
)
```

### Model uncertainty

```{r, fig.width=15, fig.height=15}
#| results: asis
#| panel: tabset
 
fig_pred_unc <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "pred_unc[A-Za-z0-9]+", 
    subtitle = FALSE, 
    plot_labels = TRUE, 
    label = "Uncertainty associated with predicted coral cover values in",
    n_cols = 1
  )
)
```

### Trends at selected locations

```{r, fig.width=15, fig.height=15}
#| results: asis
#| panel: tabset

fig_data <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "trends_FRK", 
    subtitle = FALSE, 
    plot_labels = TRUE, 
    label = "Examples of temporal trends at A) four data-tiers and B) four predictive-tiers. Black lines represent mean predicted coral cover, with shaded areas indicating predictive intervals. Dots show true coral cover averaged at the tier level for the scenario",
    n_cols = 1
  )
)
```

### Model fit 

```{r, fig.width=15, fig.height=15}
#| label: fig-fit
#| eval: true
#| echo: false
#| fig-cap: Model goodness-of-fit showing predicted coral cover versus true values for the prediction-tiers. True values corresponds to the mean coral cover at tier-level.   

print_attr_plots_level2(
  list_folders = included_dirs,
  name_plot = "check_true.png"
)
``` 

### Cyclone  
```{r, fig.width=15, fig.height=15}
#| results: asis
#| panel: tabset
  
fig_cyclone <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "cyclone", 
    subtitle = FALSE, 
    plot_labels = TRUE, 
    label = "Relative effects of cyclone exposure per surveyed year for the scenario",
    n_cols = 1
  )
)

fig_cyclone
```

### Heat stress 

```{r, fig.width=15, fig.height=15}
#| results: asis
#| panel: tabset
 
fig_dhw <- purrr::walk(
  included_dirs, 
  ~ print_attr_plots_level3(
    list_folders = .x, 
    name_plot = "dhw", 
    subtitle = FALSE, 
    plot_labels = TRUE, 
    label = "Relative effects of heat stress event per surveyed year for the scenario",
    n_cols = 1
  )
)

``` 

### Details on predictive measures

These predictive measures give a single number with low scores representing better performances. 

* 95% coverage interval (Cvg): evaluates how often predictions include true observations, with the goal of capturing the true values 95% of the time. It is estimated as follows: 

$$
\text{coverage95}(z, \ell, u) \;=\; 
\left| 0.95 \;-\; \frac{1}{n} \sum_{i=1}^{n} \mathbf{1}\!\left( \ell_i < z_i < u_i \right) \right|
$$

where $z = \{z_1, z_2, \dots, z_n\}$ are the coral cover observations, $\ell$ and $u$ are the lower and upper bounds of the predictive intervals, $n$ the total number of predictions, and $\mathbf{1}(\cdot)$ is the indicator function (1 if the condition is true, 0 otherwise).

* 95% interval score (IS): rewards prediction intervals that include the true observations (accuracy) and penalizes those that are too narrow or too wide (precision). It is computed as follow: 

$$
\text{IS}_{95} \;=\; \frac{1}{n} \sum_{i=1}^{n} 
\Bigg[
(u_i - \ell_i)
+ \frac{2}{\alpha} (\ell_i - y_i)\,\mathbf{1}(y_i < \ell_i)
+ \frac{2}{\alpha} (y_i - u_i)\,\mathbf{1}(y_i > u_i)
\Bigg]
$$

where $\alpha = 0.05$, $\ell$ and $u$ are the lower and upper bounds of the predictive intervals, $n$ the total number of predictions, and $y$ are observed coral cover. 

* Root-mean-squared prediction error (RMSPE) - how far off model predictions are from true observations without considering for uncertainty.

$$
\text{RMSPE} \;=\; \sqrt{ \frac{1}{n} \sum_{i=1}^{n} (y_i - \hat{y}_i)^2 }
$$

where $y$ and $\hat{y}$ are the observed and predicted coral cover values, respectively, and $n$ the total number of observations. 

* Continuous Ranked Probability Score (CRPS) - represents the quality of the predictions over the entire predictive probability distribution penalizing predictions that are inaccurate, imprecise or overconfident.  

$$
\text{CRPS}(F, y) \;=\; \sigma \left[ 
z \left( 2 \Phi(z) - 1 \right) \;+\; 2 \,\phi(z) \;-\; \frac{1}{\sqrt{\pi}}
\right],
\quad z = \frac{y - \mu}{\sigma}
$$

where $y$ is the observed coral cover values, $\mu$ and $\sigma$ are the mean and the standard deviation of the predictive normal distribution, $\phi(.)$ represented the standard normal probability density function and $\Phi$ the cumulative distribution function. 
